package com.example.photoweather;

import android.content.Context;

import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;

import com.example.photoweather.models.Photo;

/**
 * @author Ali Adel
 * <p>
 * Class used by Room to instantiate DB and return it's instance
 */
@Database(entities = Photo.class, version = 1, exportSchema = false)
public abstract class PhotoDatabase extends RoomDatabase {

    /**
     * Returns instance of DB generated by Room as it is abstract class
     * so we can't make a new of it anyway
     */
    private static PhotoDatabase instance;

    // holds DB name
    private static final String DB_NAME = "photo_database";

    /**
     * get instance of Dao interface generated by room
     *
     * @return Dao interface to interact with DB
     */
    public abstract PhotoDao photoDao();

    /**
     * get Instance of DB Synchronized to not allow the chance of more than one thread
     * calling at same time and make multiple instance of DB
     *
     * @param context to use in making DB instance for application
     * @return DB instance to get Dao from to make DB operations
     */
    public static synchronized PhotoDatabase getInstance(Context context) {
        if (instance == null) {
            instance = Room.databaseBuilder(context.getApplicationContext(),
                    PhotoDatabase.class, DB_NAME)
                    .fallbackToDestructiveMigration()
                    .build();
        }
        return instance;
    }
}
